{"version":3,"sources":["App.js","index.js"],"names":["Square","props","className","onClick","value","Board","renderSquare","i","squares","winner","every","x","status","calculateWinner","lines","length","a","b","c","collection","Game","React","Array","fill","history","setHistory","xIsNext","setXIsNext","stepNumber","setStepNumber","grid","current","moves","map","step","move","gridPosition","index","desc","key","jumpTo","temp","slice","concat","handleClick","arr","completed","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ba5da7dc.chunk.js","sourcesContent":["import * as React from 'react';\nimport './App.css';\n\nconst Square = (props) => {     \n  return (\n    <button className=\"square\" onClick={props.onClick}>\n      {props.value}\n    </button>\n  );\n}\n\nconst Board = (props) => {\n\nconst renderSquare = (i) => {\nreturn (\n  <Square \n  value={props.squares[i]} \n  onClick={()=>props.onClick(i)}\n  className = {props.winner == '' ? '' : (props.winner.every(x => x==i)) ? 'bold' : '' }\n   />\n);\n}\n\nreturn (\n<div>\n    <div className=\"status\">{props.status}</div>\n    <div className=\"board-row\">\n      {renderSquare(0)}\n      {renderSquare(1)}\n      {renderSquare(2)}\n    </div>\n    <div className=\"board-row\">\n      {renderSquare(3)}\n      {renderSquare(4)}\n      {renderSquare(5)}\n    </div>\n    <div className=\"board-row\">\n      {renderSquare(6)}\n      {renderSquare(7)}\n      {renderSquare(8)}\n    </div>\n</div>   \n);\n}\n\nconst Game = () => {\n\nconst [history, setHistory] = React.useState([{squares: Array(9).fill(null)}]);\nconst [xIsNext, setXIsNext] = React.useState(true);\nconst [stepNumber, setStepNumber] = React.useState(0);\n\nconst grid = [\n  \"col:1, row:1\",\"col:2, row:1\",\"col:3, row:1\",\n  \"col:1, row:2\",\"col:2, row:2\",\"col:3, row:2\",\n  \"col:1, row:3\",\"col:2, row:3\",\"col:3, row:3\"\n]\n\nconst handleClick = (i) => {\nlet temp = history.slice(0, stepNumber + 1);\nlet current = temp[temp.length - 1];\nlet squares = current.squares.slice();\nlet winner = calculateWinner(current.squares);\nif(winner || squares[i]){\n  return;\n}\n \nsquares[i] = xIsNext ? `X` : `O`;\nsetHistory(temp.concat([{\n  squares:squares\n}]));\nsetXIsNext(!xIsNext);\nsetStepNumber(temp.length);\n\n}\n\nconst jumpTo = (step) => {\nsetStepNumber(step);\nsetXIsNext((step % 2) === 0);\n}\n\nconst current = history[stepNumber];\nconst winner = calculateWinner(current.squares);\nconst status = (winner, arr) => {\n  let completed = arr.every(x => x!=null);\n  if(winner || completed) {\n    if(winner){\n      return `Winner ${winner.winner}`\n    }\n    return `Draw`\n  }\n  else {\n    return `Next player: ${xIsNext ? `X` : `O`}`;\n    }\n};\n\nconst moves =  history.map((step, move) => {\n  let gridPosition;\n    history[move].squares.map((x, index)=>{\n      if(move!=0 && history[move-1].squares[index]!=x){gridPosition=index;}\n    });\nconst desc = move ? `Go to move #${move} at ${grid[gridPosition]}`  : `Go to game start`;     \nreturn(\n  <li key={move}>\n    <button className={move == stepNumber ? 'bold' : ''} onClick={() => jumpTo(move)}>{desc}</button>\n  </li>\n);\n\n}); \n\n\n\nreturn (\n<div className=\"game\">\n    <div className=\"game-board\">\n      <Board \n      squares = {current.squares}\n      onClick = {(i) => {handleClick(i)}}\n      status = {status(winner, current.squares)}\n      winner = {winner ? winner.collection : ''} />\n    </div>\n    <div className=\"game-info\">\n      <ol>{moves}</ol>\n    </div>\n</div>\n);\n}\n\nconst calculateWinner = (squares) => {\nconst lines = [\n[0, 1, 2],\n[3, 4, 5],\n[6, 7, 8],\n[0, 3, 6],\n[1, 4, 7],\n[2, 5, 8],\n[0, 4, 8],\n[2, 4, 6],\n];\nfor (let i = 0; i < lines.length; i++) {\nconst [a, b, c] = lines[i];\nif (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n  return {\n    winner: squares[a],\n    collection: [a,b,c]\n  }\n}\n}\nreturn null;  \n}\n\nexport default Game;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Game from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Game />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}